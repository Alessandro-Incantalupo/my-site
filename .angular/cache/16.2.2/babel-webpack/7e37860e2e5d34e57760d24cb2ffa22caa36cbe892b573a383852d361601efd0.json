{"ast":null,"code":"var _class;\nimport { RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from \"./modules/pages/page-not-found/page-not-found.component\";\nimport { HomeComponent } from \"./modules/pages/home/home.component\";\nimport { AboutMeComponent } from \"./modules/pages/about-me/about-me.component\";\nimport { ContactsComponent } from \"./modules/pages/contacts/contacts.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [\n// pathMatch: Determines how the router should match the route with the URL. It can be either 'full' or 'prefix'. When set to 'full',\n// the router will match the route if the URL is an exact match. 'prefix' will match if the URL starts with the path. For empty path routes,\n// you should use 'full'.\n{\n  path: '',\n  pathMatch: 'full',\n  component: HomeComponent\n}, {\n  path: 'about',\n  component: AboutMeComponent\n}, {\n  path: 'contacts',\n  component: ContactsComponent\n}, {\n  path: '**',\n  component: PageNotFoundComponent\n}];\nclass AppRoutingModule {}\n_class = AppRoutingModule;\n_class.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _class\n});\n_class.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\nexport { AppRoutingModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","PageNotFoundComponent","HomeComponent","AboutMeComponent","ContactsComponent","routes","path","pathMatch","component","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["G:\\Frontend Developer\\Portfolio\\my-site\\src\\app\\app-routing.module.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {PageNotFoundComponent} from \"./modules/pages/page-not-found/page-not-found.component\";\nimport {HomeComponent} from \"./modules/pages/home/home.component\";\nimport {AboutMeComponent} from \"./modules/pages/about-me/about-me.component\";\nimport {ContactsComponent} from \"./modules/pages/contacts/contacts.component\";\n\nconst routes: Routes = [\n  // pathMatch: Determines how the router should match the route with the URL. It can be either 'full' or 'prefix'. When set to 'full',\n  // the router will match the route if the URL is an exact match. 'prefix' will match if the URL starts with the path. For empty path routes,\n  // you should use 'full'.\n  {path: '', pathMatch: 'full', component: HomeComponent},\n  {path: 'about', component: AboutMeComponent},\n  {path: 'contacts', component: ContactsComponent},\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n"],"mappings":";AACA,SAAQA,YAAY,QAAe,iBAAiB;AACpD,SAAQC,qBAAqB,QAAO,yDAAyD;AAC7F,SAAQC,aAAa,QAAO,qCAAqC;AACjE,SAAQC,gBAAgB,QAAO,6CAA6C;AAC5E,SAAQC,iBAAiB,QAAO,6CAA6C;;;AAE7E,MAAMC,MAAM,GAAW;AACrB;AACA;AACA;AACA;EAACC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAE,MAAM;EAAEC,SAAS,EAAEN;AAAa,CAAC,EACvD;EAACI,IAAI,EAAE,OAAO;EAAEE,SAAS,EAAEL;AAAgB,CAAC,EAC5C;EAACG,IAAI,EAAE,UAAU;EAAEE,SAAS,EAAEJ;AAAiB,CAAC,EAChD;EAAEE,IAAI,EAAE,IAAI;EAAEE,SAAS,EAAEP;AAAqB,CAAE,CACjD;AAED,MAIaQ,gBAAgB;SAAhBA,gBAAgB;;mBAAhBA,MAAgB;AAAA;;QAAhBA;AAAgB;;YAHjBT,YAAY,CAACU,OAAO,CAACL,MAAM,CAAC,EAC5BL,YAAY;AAAA;SAEXS,gBAAgB;;2EAAhBA,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAZ,YAAA;IAAAa,OAAA,GAFjBb,YAAY;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}